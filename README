
xx xx  xx xx
x x x  x x x
x   x  x   x
The PHP media library


---- The PHP media library.

Synopsis
--------
Making media processing portable isn't easy. Retrieving meta data from media
through one of the thousand extension is by times overwhelming. Dealing with
MIME-types is most often limited to magic lookup.

This library is concerned with three aspects of media and organized
accordingly:

- Processing of media
- Retrieving media metadata
- Determining a file's MIME-type

The set of Media_* classes provide abstractions from underlying extensions or
libraries and most common methods for operations like resizing and conversion
(even between i.e. PDFs, movies and images).

The Mime_Type class helps with determining the MIME-type or correct extension
of a file or stream. It comes with adapters for the fileinfo extension, glob
and magic databases from the freedesktop project, as well as modmime style
databases.

The files required to make MIME detection work autonomously (i.e. without the
fileinfo extension installed) are shipped with the library. You'll find those
files in the data directory. Please note that the MIME magic implementation in
pure PHP will always be a lot slower than the PHP extensions in C and currently
has to be considered experimental

Features
--------
The most significant features of this library are:

- PSR-0 compatiblity
- Fast Freedesktop mime file parser implemented in pure PHP
- FFmpeg and SoX adapters for video and audio conversion

Copyright & License
-------------------
MM, the PHP media library is Copyright (c) 2007-2012 David Persson
if not otherwise stated. The code is distributed under the terms
of the MIT License. For the full license text see the LICENSE file.

Versions & Requirements
-----------------------
Version 1.1.0, PHP >=5.3.0 (in progress)
Version 1.0.0, PHP >=5.2.1

The library is known to run fine under linux and darwin. Depending on
the adapters you are using you may need (this is a selection):

- ext/fileinfo
- ext/gd
- ghostscript
- ImageMagick
- ext/imagick >= 3.0.0
- FFmpeg >= 0.10.0, < 0.11.0
- SoX

Installation
------------
1. Clone the repository or extract a downloaded archive, then move
   or copy the resulting directory into /path/to/your/libraries/.

2. Put the src directory of it in your include path.
   ```
   ini_set('include_path', ini_get('include_path') . PATH_SEPARATOR . '/path/to/mm/src');
   ```

3. To bootstrap, classes must be configured prior using them.
   ```
   require 'Mime/Type.php';
   require 'Media/Process.php';
   require 'Media/Info.php';

   Mime_Type::config('Magic', array(
       'adapter' => 'Fileinfo'
   ));
   Mime_Type::config('Glob', array(
       'adapter' => 'Freedesktop',
       'file' => '/path/to/mm/data/glob.db'
   ));

   Media_Process::config(array(
       // 'audio' => 'SoxShell',
       // 'document' => 'Imagick',
       'image' => 'Gd',
       // 'video' => 'FfmpegShell'
   ));

   Media_Info::config(array(
       // 'audio' => array('SoxShell'),
       // 'document' => array('Imagick'),
       'image' => array('ImageBasic'),
       // 'video' => array('FfmpegShell')
   ));
   ```

Running the Tests
-----------------
This library is continously integrated. Please check the following URL
for information on the status of the latest builds:

http://travis-ci.org/#!/davidpersson/mm

Tests for this library are PHPUnit based. To run the tests you'll need
to have PHPUnit installed[1]. Following commands will run all the tests.

$ cd /path/to/mm/src
$ phpunit ../tests

[1] http://www.phpunit.de/manual/current/en/installation.html

MIME type detection
-------------------
The detection class `Media_Type` allows for detecting MIME types of files and
streams by analyzing it's contents and/or extension. The class makes use of two
adapters (`magic` and `glob`) which must be configured before using any of the
methods and is thus "two-headed".

Usage
'''''
`Mime_Type::guessType(...)`
Guesses the MIME type of the file.

```
Mime_Type::guessType('example.png'); // returns 'image/png'
Mime_Type::guessType('/path/to/example.png'); // returns 'image/png'
Mime_Type::guessType($handle = fopen('/path/to/example.png', 'rb')); // returns 'image/png'
```

`Mime_Type::guessExtension(...)`
Guesses the extension (suffix) for an existing file or a MIME type.

```
Mime_Type::guessExtension('application/pdf'); // returns 'pdf'
Mime_Type::guessExtension('/path/to/example.png'); // returns 'png'
Mime_Type::guessExtension($handle = fopen('/path/to/example.png', 'rb')); // returns 'png'
```

`Mime_Type::guessName(...)`
Determine the common lowercase media name, with and without hints from a magic
lookup.

```
Mime_Type::guessName('example.png'); // returns 'image'
Mime_Type::guessName('example.webm'); // returns 'video'
Mime_Type::guessName('application/pdf'); // returns 'document'
Mime_Type::guessName('/path/to/example.png'); // returns 'image'
Mime_Type::guessName($handle = fopen('/path/to/example.png', 'rb')); // returns 'image'
```

Note: Most methods have additional options which give you more control about
      the output. Please consult the API documentation for more information
      on these options.

Available `Mime_Glob` Adapters
''''''''''''''''''''''''''''''
`Apache`
This adapter supports files like the ones that come with the `mod_mime_magic`
Apache Webserver module. Most often you'll find such a file containing MIME
type to extension mappings within your apache2 configuration directory as
`mime.types`.

http://httpd.apache.org/docs/2.2/en/mod/mod_mime_magic.html

`Freedesktop`
This adapter supports glob database files compiled into the Freedesktop format.
The implementation here doesn't strictly follow the spec when it comes to
matching against patterns. A precompiled glob database file comes with this
library and is located in `resources/glob.db`. You may also have a much more
current version of such a file on your system. Most often those files are
located below `/usr/share/mime`.

http://standards.freedesktop.org/shared-mime-info-spec/shared-mime-info-spec-0.13.html

- This is the recommended adapter when doing glob lookups. -

`Memory`
This is a very simplistic adapter and can be used for building up your own glob
database in memory. It works solely in memory and doesn't need a database file.
This adapter is good for caching and testing.

`Php`
Can parse files containing one huge PHP array. Files must look like this:
```
<?php return array(
    item0,
    item1,
    item2,
    item3
); ?>
```

Available `Mime_Magic` Adapters
'''''''''''''''''''''''''''''''
`Apache`
This adapter supports files like the ones that come with the `mod_mime_magic`
Apache Webserver module. Most often you'll find such a file containing MIME
type to extension mappings within your apache2 configuration directory as
`magic`.

http://httpd.apache.org/docs/2.2/en/mod/mod_mime_magic.html

`Freedesktop`
This adapter supports magic database files compiled into the Freedesktop
format.  A precompiled glob database file comes with this library and is
located in `resources/magic.db`. You may also have a much more current version
of such a file on your system. Most often those files are located below
`/usr/share/mime`.

http://standards.freedesktop.org/shared-mime-info-spec/shared-mime-info-spec-0.13.html

`Fileinfo`
This adapter wraps the functions of the fileinfo extension. This is the
recommended adapter for doing magic lookups.

- This is the recommended adapter when doing magic lookups. -

http://php.net/fileinfo

`Memory`
This is a very simplistic adapter and can be used for building up your own
magic database in memory. It works solely in memory and doesn't need a database
file. This adapter is good for caching and testing.

`Php`
Can parse files containing one huge PHP array. Files must look like this:
```
<?php return array(
    item0,
    item1,
    item2,
    item3
); ?>
```
